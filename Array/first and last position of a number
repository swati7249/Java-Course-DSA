public class firstandlastPosition {
    public static void main(String[] args) {
         int[] nums={5,7,7,8,8,10};
         int target=7;
         firstandlastPosition obj = new firstandlastPosition(); // Create an instance to call the non-static method
         int[] result = obj.searchRange(nums, target);
         System.out.println("[" + result[0] + ", " + result[1] + "]");
    }

    public int[] searchRange(int[] nums, int target) {

        // check for the first occurance if target first
        int[] ans={-1,-1};
        int start=search(nums,target,true);
        int end=search(nums,target,false);
        ans[0]=start;
        ans[1]=end;
        return ans;

    }

    // this function just return the index value of what we are trying to search for target
    int search(int[] nums, int target, boolean findStartIndex) {
        int ans = -1;// potential answer
        int start = 0;
        int end = nums.length - 1;
        while (start <= end) {
            int mid = start + (end - start) / 2;
            if (target > nums[mid]) {
                start = mid + 1;
            } else if (target < nums[mid]) {
                end = mid - 1;
            } else {
                // potential ans found
                ans=mid;
                if(findStartIndex){
                    end=mid-1;
                }
                else{
                    start=mid+1;
                }
            }
        }
        return ans;
    }
}
