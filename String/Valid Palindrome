public class validParenthesis {
    public static void main(String[] args) {
        String s = "A man, a plan, a canal: Panama";
        System.out.println(isPalindrome(s));
    }

    public static boolean isPalindrome(String s) {
        String str = s.trim().replaceAll("[^a-zA-Z0-9]", "").toLowerCase();
        if (str.length() == 0) {
            return true;
        }
        for (int i = 0; i < str.length(); i++) {
            char start = str.charAt(i);
            char end = str.charAt(str.length() - 1-i);
            if (start != end) {
                return false;
            }
        }
        return true;

    }
    public static boolean isPalindromes(String s) {
        // Clean the string: remove non-alphanumeric characters and convert to lowercase
        String str = s.trim().replaceAll("[^a-zA-Z0-9]", "").toLowerCase();
        
        // Use two-pointer approach to check for palindrome
        int left = 0;
        int right = str.length() - 1;

        while (left < right) {
            if (str.charAt(left) != str.charAt(right)) {
                return false; // Characters don't match
            }
            left++;
            right--;
        }
        return true; // All characters matched
    }

}
